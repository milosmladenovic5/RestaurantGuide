{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/instagram/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB;AAEvE;;;;;;;;;;;;;;;;;GAiBG;AASH;IAA+B,6BAAiB;IAAhD;QAA+B,8BAAiB;IAyChD,CAAC;IAvCC;;;;OAIG;IAIH,+BAAW,GAAX,cAAyC,MAAM,CAAC,CAAC,CAAC;IAElD;;;;;;;OAOG;IAIH,yBAAK,GAAL,UAAM,iBAAyB,EAAE,OAAgB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE5E;;;;OAIG;IAIH,8BAAU,GAAV,UAAW,oBAA4B,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE7D,oBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAjCA;QAAC,OAAO,CAAC;YACP,aAAa,EAAE,MAAM;SACtB,CAAC;;;;gDAAA;IAWF;QAAC,OAAO,CAAC;YACP,aAAa,EAAE,MAAM;SACtB,CAAC;;;;0CAAA;IAQF;QAAC,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;SACzB,CAAC;;;;+CAAA;IAxCJ;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,0BAA0B;YAClC,SAAS,EAAE,WAAW;YACtB,IAAI,EAAE,4CAA4C;YAClD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;;iBAAA;IA2CF,gBAAC;AAAD,CAAC,AAzCD,CAA+B,iBAAiB,GAyC/C","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name Instagram\r\n * @description Share a photo with the instagram app\r\n *\r\n * @usage\r\n * ```\r\n * import { Instagram } from '@ionic-native/instagram';\r\n *\r\n * constructor(private instagram: Instagram) { }\r\n *\r\n * ...\r\n *\r\n * this.instagram.share('data:image/png;uhduhf3hfif33', 'Caption')\r\n *   .then(() => console.log('Shared!'))\r\n *   .catch((error: any) => console.error(error));\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'Instagram',\r\n  plugin: 'cordova-instagram-plugin',\r\n  pluginRef: 'Instagram',\r\n  repo: 'https://github.com/vstirbu/InstagramPlugin',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class Instagram extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Detect if the Instagram application is installed on the device.\r\n   *\r\n   * @returns {Promise<boolean|string>} Returns a promise that returns a boolean value if installed, or the app version on android\r\n   */\r\n  @Cordova({\r\n    callbackStyle: 'node'\r\n  })\r\n  isInstalled(): Promise<boolean|string> { return; }\r\n\r\n  /**\r\n   * Share an image on Instagram\r\n   * Note: Instagram app stopped accepting pre-filled captions on both iOS and Android. As a work-around, the caption is copied to the clipboard. You have to inform your users to paste the caption.\r\n   *\r\n   * @param canvasIdOrDataUrl The canvas element id or the dataURL of the image to share\r\n   * @param caption The caption of the image\r\n   * @returns {Promise<any>} Returns a promise that resolves if the image was shared\r\n   */\r\n  @Cordova({\r\n    callbackStyle: 'node'\r\n  })\r\n  share(canvasIdOrDataUrl: string, caption?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Share a library asset or video\r\n   * @param assetLocalIdentifier A local fileURI\r\n   * @returns {Promise<any>} Returns a promise that resolves if the image was shared\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  shareAsset(assetLocalIdentifier: string): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}